From 7a8b9c0d1e2f3a4b5c6d7e8 Mon Sep 15 13:40:00 2025
From: ChatGPT <dev@richmove.co.uk>
Date: Mon, 15 Sep 2025 13:40:00 +0100
Subject: [WP8 Guardrails] Operationalization: Admin auth semantics, Cost
 monitoring, Promotion criteria, Blast-radius limits (docs-only)
X-Patch-Name: 1340_WP8_Guardrails_Operationalization.patch

# Scope
# - Documentation-only patch answering four asks:
#   (1) Clear admin auth implementation semantics
#   (2) Cost monitoring/alerts with concrete thresholds
#   (3) Promotion criteria from MVP-optional → Core
#   (4) Blast radius limits + kill switches
#
# - Updates WP8, FeatureFlags, V&V, and adds new Ops/Security docs.
# - No runtime code change; code snippets provided as reference.
---
diff --git a/WPS/WP8.md b/WPS/WP8.md
index e5a4f39..b61ad20 100644
--- a/WPS/WP8.md
+++ b/WPS/WP8.md
@@ -45,6 +45,51 @@
 | E8.F4 | OpenTelemetry minimal | **Monitoring.OpenTelemetry=true** | **Exporters disabled** by default; sampling low if turned on | Near-zero until exporters are configured |
 | E8.F5 | Non-FX domains | Not allowed in MVP | Parked until WP raised | N/A |
 
+## Admin Auth (what `RequireRole("Admin")` means)
+`RequireRole("Admin")` is implemented via an **authorization policy** called `AdminOnly` that accepts **either**:
+1) A **role claim** equal to `Admin` (any of: `role`, `roles`, or the .NET role URI), **or**
+2) A valid **Admin API key** presented as `X-Admin-Token` (configurable **fallback** for RED/local only).
+
+See: `DOCS/Security/AdminAuth.md` for the exact policy and code snippet.
+
+**Guardrail expectation:** `/metrics` and `/scaling/status` **must** require `AdminOnly` when enabled.
+
+## Cost Monitoring & Alerts (MVP defaults)
+- Create a **Budget** on the resource group with alerts at **50% / 80% / 100%**.
+- Add **Azure Monitor** alerts (or ACA/App Service equivalents):
+  - **Egress data/day** > 2 GB (RED) → warn; > 5 GB → alert.
+  - **Avg CPU (5 min)** > 70% sustained 15 min → scale/investigate.
+  - **SignalR connections** > planned cap (e.g., 500) → investigate.
+  - **Log volume** > 1 GB/day (RED) → sampling review.
+See `DOCS/Ops/CostMonitoring.md` for step-by-step CLI and thresholds.
+
+## Promotion Criteria — MVP‑optional → Core
+All must pass for 7 days in GREEN (canary → full):
+1) **Security:** `AdminOnly` enforced; no unauthenticated access observed; no high/critical findings.
+2) **Perf:** p95 latency delta ≤ **+5%** vs baseline; zero hub disconnect spikes.
+3) **Cost:** Monthly delta ≤ **£15** for enabled items; budgets/alerts clean for 7 days.
+4) **Reliability:** SLO errors unchanged; no crash loops; health checks green.
+5) **V&V:** Guardrail smoke tests (404/401/200) in CI; traceability matrix updated.
+6) **Ops:** Runbook exists (enable/disable, rollback, dashboards).
+
+## Blast Radius Limits & Kill Switches
+- **Flags:** `Features.Monitoring.Enabled`, `Features.Monitoring.Prometheus`, `Features.Scaling.Enabled`, `Features.Scaling.ExposeStatusEndpoint` — flipping to `false` **removes routes**.
+- **Binding:** `/metrics` bound to loopback/private address only in RED; **no public exposure**.
+- **Auth:** `AdminOnly` policy required; least-privilege tokens/groups.
+- **Rate limits:** recommend 10 rps per admin for `/metrics` and `/scaling/status` (see FeatureFlags doc).
+- **Timeouts:** 2s route timeout to prevent slow-scan amplification.
+- **No PII:** `/scaling/status` must redact tenant/user data.
+- **Runbook:** rollback = disable flags → 404; optional recycle instance.
+
 ## V&V {#vv}
 ### Feature → Test mapping
 | Feature ID | Name | Test IDs | Evidence / Location |
diff --git a/DOCS/Architecture/FeatureFlags.md b/DOCS/Architecture/FeatureFlags.md
index ab7d5c1..d2e4f7a 100644
--- a/DOCS/Architecture/FeatureFlags.md
+++ b/DOCS/Architecture/FeatureFlags.md
@@ -33,6 +33,12 @@
 - Metrics route bound to `http://127.0.0.1:XXXX/metrics` or private VNet address.
 - Admin auth enforced via policy `RequireRole('Admin')` on both endpoints.
 
+### Recommended rate limits/timeouts
+- `/metrics`: **10 rps per admin**, 2s timeout.
+- `/scaling/status`: **5 rps per admin**, 2s timeout.
+- Apply ASP.NET Rate Limiting middleware when we wire flags in code.
+
 ## Environments
 - **RED (dev/free tier):** all OFF, except minimal logs & health.
 - **GREEN (prod/paid):** selectively enable with cost review.
diff --git a/DOCS/Security/AdminAuth.md b/DOCS/Security/AdminAuth.md
new file mode 100644
index 0000000..f3a2b1c
--- /dev/null
+++ b/DOCS/Security/AdminAuth.md
@@ -0,0 +1,162 @@
+# Admin Auth — `RequireRole("Admin")` Semantics
+
+**Goal:** A clear, minimal mechanism to protect privileged endpoints like `/metrics` and `/scaling/status`.
+
+## Policy
+We define an **authorization policy** called `AdminOnly` which passes if **any** of the following are true:
+1. The user principal has a role claim equal to `Admin` — we accept:
+   - `roles` or `role` claim with value `Admin`, **or**
+   - the .NET role URI claim (`http://schemas.microsoft.com/ws/2008/06/identity/claims/role`) with value `Admin`.
+2. A valid **Admin API key** is presented in header `X-Admin-Token` (fallback for RED/local).
+
+> **Why fallback?** In RED/local we may not have full identity configured. The API key is an **interim** gate with rotation and audit; in GREEN we prefer OIDC/Entra roles or group-based access.
+
+## Reference Implementation (C# snippet)
+_Docs-only; to be added in a follow-up code patch if desired._
+
+```csharp
+// Program.cs (excerpt)
+services.AddAuthorization(options =>
+{
+    options.AddPolicy("AdminOnly", policy =>
+        policy.RequireAssertion(ctx =>
+            ctx.User != null && (
+                ctx.User.IsInRole("Admin") ||
+                ctx.User.Claims.Any(c =>
+                    (c.Type == "role" || c.Type == "roles" ||
+                     c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role")
+                    && c.Value == "Admin"
+                ) ||
+                // API key fallback for RED/local
+                (ctx.Resource as HttpContext)?.Request.Headers.TryGetValue("X-Admin-Token", out var token) == true &&
+                TimingSafeEquals(token.ToString(), cfg["Admin:ApiKey"])
+            )
+        ));
+});
+
+static bool TimingSafeEquals(string a, string b)
+{
+    if (string.IsNullOrEmpty(a) || string.IsNullOrEmpty(b)) return false;
+    var ba = System.Text.Encoding.UTF8.GetBytes(a);
+    var bb = System.Text.Encoding.UTF8.GetBytes(b);
+    if (ba.Length != bb.Length) return false;
+    int diff = 0;
+    for (int i = 0; i < ba.Length; i++) diff |= ba[i] ^ bb[i];
+    return diff == 0;
+}
+```
+
+**Controller usage:**
+```csharp
+[Authorize(Policy = "AdminOnly")]
+[ApiController]
+[Route("[controller]")]
+public class MetricsController : ControllerBase { /* ... */ }
+```
+
+## Identity Sources
+- **GREEN (prod):** OIDC (e.g., Entra ID) → map admin users or groups to `Admin` role claim.
+- **RED (dev/free tier):** `X-Admin-Token` header using `Admin:ApiKey` from secure secret store (not in repo).
+
+## Operational Notes
+- **Rotation:** rotate `Admin:ApiKey` quarterly; store only in Key Vault/GH secrets.
+- **Audit:** log admin access attempts (userId or `apiKey` hash prefix), but **never** the raw key.
+- **Defense in depth:** private binding for `/metrics`, firewall/VNet rules where possible.
diff --git a/DOCS/Ops/CostMonitoring.md b/DOCS/Ops/CostMonitoring.md
new file mode 100644
index 0000000..c1d2e3f
--- /dev/null
+++ b/DOCS/Ops/CostMonitoring.md
@@ -0,0 +1,172 @@
+# Cost Monitoring & Alerts
+
+Pragmatic guardrails to catch cost creep early, tuned for **RED** (dev/free) and **GREEN** (prod/paid).
+
+## 1) Budgets (Resource Group)
+Create a budget with alerts at **50%**, **80%**, **100%** of the monthly cap.
+
+**Azure CLI (sample):**
+```bash
+az consumption budget create \
+  --amount 50 \  # monthly GBP cap (example)
+  --category cost \
+  --name rg-budget \
+  --resource-group <RG_NAME> \
+  --time-grain monthly \
+  --thresholds 50 80 100 \
+  --contact-emails ops@richmove.co.uk product@richmove.co.uk
+```
+
+## 2) App Service / Container Apps alerts
+Create rules for:
+- **Egress data/day** > 2 GB (RED), 5 GB (GREEN warn), 10 GB (GREEN critical).
+- **Avg CPU (5m)** > 70% for 15 minutes (scale/investigate).
+- **Requests >= 5xx** > 1% for 5 minutes (reliability guardrail).
+- **SignalR connections** > planned cap (e.g., 500).
+
+**Azure CLI (indicative):**
+```bash
+# Example: CPU > 70% for 15m
+az monitor metrics alert create -n cpu-high --scopes <APP_RESOURCE_ID> \
+  --condition "avg Percentage CPU > 70" --window-size 15m --evaluation-frequency 5m \
+  --action-group <ACTION_GROUP_ID>
+```
+
+## 3) Logging volume
+- Target **< 1 GB/day** in RED; review sampling if exceeded.
+- Consider turning off noisy categories or lowering verbosity.
+
+## 4) Prometheus scraping (if enabled)
+- In RED: **do not** run persistent Prometheus; rely on local scrape or DevTools.
+- In GREEN: scrape **/metrics** at **60s**; no remote write unless justified.
+
+## 5) Monthly Review
+- Compare budget vs actuals; track deltas for any enabled WP8 features.
+- If any alert breached → **consider disabling** allowlisted features until verified.
diff --git a/DOCS/VnV/VerificationAndValidation.md b/DOCS/VnV/VerificationAndValidation.md
index ab1c2d3..b2c3d4e 100644
--- a/DOCS/VnV/VerificationAndValidation.md
+++ b/DOCS/VnV/VerificationAndValidation.md
@@ -44,6 +44,20 @@
 - No WP merges without: updated V&V table, matrix rows, and at least one smoke probe.
 
 ## Evidence Examples
 - Smoke outputs (HTTP status/JSON fields).
 - Unit test results (xUnit).
 - k6 thresholds.
 - Logs/metrics screenshots or text.
+
+---
+
+## Promotion Criteria (MVP‑optional → Core)
+To **graduate** an MVP-optional feature to Core, we require a 7‑day clean run in production canary with:
+1) Security: admin auth enforced; no unauth requests; no high vulns.
+2) Performance: p95 latency delta ≤ +5% vs baseline; no stability regressions.
+3) Cost: marginal monthly delta ≤ £15; budgets clean (no 80%/100% breach).
+4) Reliability: error rates unchanged; health probes green; no crash loops.
+5) V&V: guardrail smoke tests in CI (404/401/200) + updated Traceability Matrix.
+6) Operations: documented runbook (enable/disable, rollback, dashboards).
+
+Fail any? Revert to MVP-optional and fix before next attempt.
diff --git a/DOCS/VnV/TestCatalogue.md b/DOCS/VnV/TestCatalogue.md
index d7e8c2a..e6f9a3b 100644
--- a/DOCS/VnV/TestCatalogue.md
+++ b/DOCS/VnV/TestCatalogue.md
@@ -34,6 +34,12 @@
 ## Observability (OBS-*)
 - **OBS-E2-Metrics** — logs/metrics show pricing tick
 - **OBS-WP5-Outbox** — logs show retries/backoff
 
 ## Guardrail Smoke (E8)
 - **SMK-E8-Metrics-404/401/200** — verify flags & auth on `/metrics`
 - **SMK-E8-Scaling-404/401/200** — verify flags & auth on `/scaling/status`
+
+## Ops/Cost (OPS-*)
+- **OPS-BUDGET-ALERTS** — Budget + alert rules configured on the RG/app
+- **OPS-LOG-VOLUME** — Daily log volume under target in RED; alert if exceeded
+- **OPS-EGRESS** — Egress/day under thresholds (alerts wired)
diff --git a/DOCS/VnV/TraceabilityMatrix.csv b/DOCS/VnV/TraceabilityMatrix.csv
index c8d9e0f..d1e2f3a 100644
--- a/DOCS/VnV/TraceabilityMatrix.csv
+++ b/DOCS/VnV/TraceabilityMatrix.csv
@@ -1,5 +1,5 @@
 FeatureID,FeatureName,WorkPackage,TestIDs,Category,Evidence
 E1.F1,API shell alive,WP1,"SMK-E1-Host",UH,Smoke_Features.md §3.1-A
@@ -17,6 +17,7 @@
 E8.F2,Prometheus metrics endpoint (guarded),WP8,"SMK-E8-Metrics-404;SMK-E8-Metrics-401;SMK-E8-Metrics-200",UH,"MVP-allowed with guardrails"
 E8.F3,Auto-scaling status endpoint (guarded),WP8,"SMK-E8-Scaling-404;SMK-E8-Scaling-401;SMK-E8-Scaling-200",UH,"MVP-allowed with guardrails"
 E8.F4,OpenTelemetry expansion,WP8,"PLAN-E8-OTel",UH,DOCS/OBSERVABILITY/OpenTelemetryPlan.md
 E8.F5,Non-FX domain stubs (Blockchain),WP8,"PLAN-E8-Blockchain",UH,"OTel plan mentions + commit refs"
+OPS.COST,Cost monitoring & alerts,WP8,"OPS-BUDGET-ALERTS;OPS-LOG-VOLUME;OPS-EGRESS",UH,"DOCS/Ops/CostMonitoring.md"
 
